{"version":3,"sources":["components/TodoHeader.tsx","components/hoc/TodosProvider.tsx","components/hooks/useTodos.ts","components/TodoForm.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodosFilter.tsx","components/TodoAddition.tsx","App.tsx","index.tsx"],"names":["TodoHeader","className","TodosContext","createContext","TodosProvider","children","useState","saved","localStorage","getItem","JSON","parse","todos","setTodos","filteredTodos","setFilteredTodos","useEffect","setItem","stringify","Provider","value","useTodos","useContext","TodoForm","setValue","areAllCompleted","setAreAllCompleted","inputRef","useRef","content","completedTodos","filter","todo","completed","length","current","focus","addTodo","id","Date","now","title","map","onSubmit","e","preventDefault","style","marginBottom","type","onClick","classNames","place","effect","onChange","target","trim","onKeyDown","key","ref","placeholder","TodoItem","editingTodo","setEditingTodo","initialTitle","setInitialTitle","updatedTitle","setUpdatedTitle","removeTodo","todoId","toggleTodo","toString","checked","onBlur","autoFocus","htmlFor","disabled","TodoList","TodosFilter","status","setStatus","filterTodos","TodoAddition","activeTodos","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edb02cf7.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoHeader.scss';\n\nexport const TodoHeader: React.FC = () => (\n  <header className=\"todo-header\">\n    <h1 className=\"todo-header__title\">\n      TODOS\n    </h1>\n  </header>\n);\n","import React, { createContext, useEffect, useState } from 'react';\nimport { ITodo } from '../../types/ITodo';\n\ntype GlobalContent = {\n  todos: ITodo[];\n  setTodos: React.Dispatch<React.SetStateAction<ITodo[]>>,\n  filteredTodos: ITodo[];\n  setFilteredTodos: React.Dispatch<React.SetStateAction<ITodo[]>>,\n};\n\nexport const TodosContext = createContext<GlobalContent | null>(null);\n\nexport const TodosProvider: React.FC = ({ children }) => {\n  const [todos, setTodos] = useState<ITodo[]>(() => {\n    const saved = localStorage.getItem(\"name\");\n    const initialValue = saved && JSON.parse(saved);\n    return initialValue || \"\";\n  });\n  const [filteredTodos, setFilteredTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    setFilteredTodos(todos);\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <TodosContext.Provider value={{\n      todos,\n      setTodos,\n      filteredTodos,\n      setFilteredTodos,\n    }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { TodosContext } from '../hoc/TodosProvider';\n\nexport const useTodos = () => {\n  return useContext(TodosContext);\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport './TodoForm.scss';\nimport classNames from 'classnames';\nimport ReactTooltip from 'react-tooltip';\nimport { useTodos } from './hooks/useTodos';\n\nexport const TodoForm: React.FC = () => {\n  const [value, setValue] = useState('');\n  const [areAllCompleted, setAreAllCompleted] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const content = useTodos();\n  const todos = content?.todos;\n  const setTodos = content?.setTodos;\n\n  const completedTodos = todos && todos.filter(todo => todo.completed === true).length;\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const addTodo = () => {\n    if (value && todos && setTodos) {\n      setTodos([...todos, {\n        id: Date.now(),\n        title: value,\n        completed: false,\n      }]);\n\n      setValue('');\n    }\n  };\n\n  const toggleAll = () => {\n    if (todos && setTodos) {\n      setTodos(\n        todos.map(todo => {\n          return { ...todo, completed: areAllCompleted };\n        }),\n      );\n    }\n  };\n\n  useEffect(() => {\n    toggleAll();\n  }, [areAllCompleted]);\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setValue(e.target.value.trim());\n  };\n\n  const handleKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addTodo();\n    }\n  };\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    addTodo();\n  };\n\n  return (\n    <form\n      className=\"todo-form\"\n      onSubmit={handleSubmit}\n      style={todos && todos.length > 0\n        ? { marginBottom: '24px' }\n        : { marginBottom: '0' }}\n    >\n      {todos && todos.length > 0 && (\n        <>\n          <button\n            type=\"button\"\n            onClick={() => setAreAllCompleted(!areAllCompleted)}\n            className={classNames(\n              'todo-form__button', {\n                'todo-form__button--left': todos.length !== completedTodos,\n                'todo-form__button--left todo-form__button--left--toggled': todos.length === completedTodos,\n              },\n            )}\n            data-tip\n            data-for=\"toggleAllTip\"\n          >\n            <i className=\"fa-solid fa-check todo-form__icon\" />\n          </button>\n          <ReactTooltip\n            id=\"toggleAllTip\"\n            place=\"top\"\n            effect=\"solid\"\n          >\n            {areAllCompleted ? 'Unselect all' : 'Select all'}\n          </ReactTooltip>\n        </>\n      )}\n\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        ref={inputRef}\n        placeholder=\"Type your todo here...\"\n        className=\"todo-form__input input is-success\"\n      />\n\n      {value.length > 0 && (\n        <button\n          type=\"submit\"\n          className=\"todo-form__button todo-form__button--right button is-success\"\n        >\n          <i className=\"fa-solid fa-plus todo-form__icon\" />\n        </button>\n      )}\n    </form>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './TodoItem.scss';\nimport classNames from 'classnames';\n\nimport { ITodo } from '../types/ITodo';\nimport { useTodos } from './hooks/useTodos';\n\nexport const TodoItem: React.FC<ITodo> = ({ id, title, completed }) => {\n  const [editingTodo, setEditingTodo] = useState(false);\n  const [initialTitle, setInitialTitle] = useState(title);\n  const [updatedTitle, setUpdatedTitle] = useState(initialTitle);\n\n  const content = useTodos();\n  const todos = content?.todos;\n  const setTodos = content?.setTodos;\n\n  const removeTodo = (todoId: number): void => {\n    if (todos && setTodos) {\n      setTodos(todos.filter(todo => todo.id !== todoId));\n    }\n  };\n\n  const toggleTodo = (todoId: number): void => {\n    if (todos && setTodos) {\n      setTodos(todos.map(todo => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }));\n    }\n  };\n\n  const editTodo = (todoId: number): void => {\n    if (todos && setTodos) {\n      setTodos(todos.map(todo => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            title: updatedTitle,\n          };\n        }\n\n        return todo;\n      }));\n    }\n  };\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setUpdatedTitle(e.target.value.trim());\n  };\n\n  const handleBlur = () => {\n    setUpdatedTitle(initialTitle);\n    setEditingTodo(false);\n  };\n\n  const handleKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    switch (e.key) {\n      case 'Enter':\n        e.preventDefault();\n        setInitialTitle(updatedTitle);\n        setEditingTodo(false);\n        editTodo(id);\n        break;\n\n      case 'Escape':\n        setUpdatedTitle(initialTitle);\n        setEditingTodo(false);\n        break;\n\n      default:\n        setEditingTodo(true);\n    }\n  };\n\n  return (\n    <li className=\"todo-item\">\n      <div className=\"todo-item__part\">\n        <input\n          id={id.toString()}\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => toggleTodo && toggleTodo(id)}\n          className=\"todo-item__checkbox\"\n        />\n\n        {editingTodo ? (\n          <input\n            type=\"text\"\n            value={updatedTitle}\n            onKeyDown={handleKeyDown}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className=\"todo-item__input input\"\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n          />\n        ) : (\n          <label htmlFor={id.toString()}>\n            <p className={classNames('todo-item__title',\n              { 'todo-item__title--completed': completed })}\n            >\n              {initialTitle}\n            </p>\n          </label>\n        )}\n      </div>\n\n      <div className=\"todo-item__part\">\n        <button\n          type=\"button\"\n          onClick={() => setEditingTodo(true)}\n          className=\"todo-item__button button is-info is-small\"\n          disabled={editingTodo}\n        >\n          <i className=\"fas fa-pencil\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => removeTodo && removeTodo(id)}\n          className=\"todo-item__button button is-small is-danger\"\n        >\n          <i className=\"fas fa-trash\" />\n        </button>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport { TodoItem } from './TodoItem';\nimport { useTodos } from './hooks/useTodos';\n\nexport const TodoList: React.FC = () => {\n  const content = useTodos();\n  const todos = content?.filteredTodos;\n\n  return (\n    <>\n      {todos && todos.length > 0 && (\n        <ul className=\"todo-list\">\n          {todos && todos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              {...todo}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { useTodos } from './hooks/useTodos';\n\nexport const TodosFilter: React.FC = () => {\n  const filters = ['All', 'Active', 'Completed'];\n  const [status, setStatus] = useState('All');\n\n  const content = useTodos();\n  const todos = content?.todos;\n  const setFilteredTodos = content?.setFilteredTodos;\n\n  const filterTodos = (value: string) => {\n    if (todos && setFilteredTodos) {\n      switch (value) {\n        case 'Completed':\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\n          break;\n\n        case 'Active':\n          setFilteredTodos(todos.filter(todo => todo.completed !== true));\n          break;\n\n        default:\n          setFilteredTodos(todos);\n      }\n    }\n  };\n\n  useEffect(() => {\n    filterTodos(status);\n  }, [status]);\n\n  useEffect(() => {\n    setStatus('All');\n  }, [todos]);\n\n  return (\n    <div className=\"todo-footer__filter if-flex \">\n      {filters.map(filter => (\n        <button\n          key={filter}\n          type=\"button\"\n          onClick={() => setStatus(filter)}\n          className={classNames(\n            'button is-small is-success is-outlined',\n            { 'is-focused': status === filter },\n          )}\n        >\n          {filter}\n        </button>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTodos } from './hooks/useTodos';\n\nimport './TodoAddition.scss';\n\nimport { TodosFilter } from './TodosFilter';\n\nexport const TodoAddition: React.FC = () => {\n  const content = useTodos();\n  const todos = content?.todos;\n  const setTodos = content?.setTodos;\n\n  const activeTodos = todos && todos.filter(todo => todo.completed === false).length;\n  const completedTodos = todos && todos.filter(todo => todo.completed === true).length;\n\n  const removeCompletedTodos = () => {\n    if (todos && setTodos) {\n      setTodos(todos.filter(todo => todo.completed === false));\n    }\n  };\n\n  return (\n    <>\n      {todos && todos.length > 0 && (\n        <div className=\"todo-addition\">\n          <span\n            className=\"todo-addition__count\"\n          >\n            {activeTodos === 1 ? (\n              `${activeTodos} todo left`\n            ) : (\n              `${activeTodos} todos left`\n            )}\n          </span>\n\n          <TodosFilter />\n\n          <button\n            type=\"button\"\n            onClick={removeCompletedTodos}\n            className=\"button is-small is-danger\"\n            disabled={!completedTodos}\n          >\n            Delete completed\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoHeader } from './components/TodoHeader';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { TodoAddition } from './components/TodoAddition';\n\nimport { TodosProvider } from './components/hoc/TodosProvider';\n\nexport const App: React.FC = () => (\n  <TodosProvider>\n    <div className=\"app\">\n      <TodoHeader />\n      <div className=\"app__todos\">\n        <TodoForm />\n        <TodoList />\n        <TodoAddition />\n      </div>\n    </div>\n  </TodosProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}